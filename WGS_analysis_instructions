# 150 whole genomes were sequenced using illumina 250 paired end sequencing and quality assembled using the a5 pipeline. 
# https://sourceforge.net/p/ngopt/wiki/A5PipelineREADME/

# genome annotation and pangenome analysis were performed following https://journals.asm.org/doi/10.1128/mbio.01425-17

# first, genomes were annotated with Prokka
# follow suggestion in this issue thread to annotate all the genomes individually: https://github.com/tseemann/prokka/issues/187
# perform the following to set up the environment (and resolve Prokka version issues in my SCC environment)

[mingers@scc2 Vp_water_FiltrationvsEnrich]$ conda create -n prokka_env python=3.6
[mingers@scc2 Vp_water_FiltrationvsEnrich]$ conda activate prokka_env
(prokka_env)[mingers@scc2 Vp_water_FiltrationvsEnrich]$ conda install -c bioconda prokka
    # only have to do the following once
(prokka_env)[mingers@scc2 Vp_water_FiltrationvsEnrich]$ cd $CONDA_PREFIX/bin
(prokka_env)[mingers@scc2 bin]$ nano prokka
    # use ^W to search for blastp
    # edit the MINVER => "2.2" to MINVER => "2.1" in the version requirements for blastp
    # do the same a few lines down for makeblastdp
    # navigate back to working directory
    
# create a qsub job (called prokka_multi here) to annotate all your genomes

(prokka_env)[mingers@scc2 bin]$ nano prokka_multi
#!/bin/bash -l
#$ -cwd # start job in submission directory
#$ -N prokka # job name, anything you want
#$ -l h_rt=24:00:00 #maximum run time
#$ -m be
#$ -pe omp 8

module load miniconda
conda activate prokka_env
for F in *.fasta; do
N=$(basename $F .fasta) ;
prokka --locustag $N --outdir $N --prefix $N  $F ;
done

# now you should have 150 subdirectories each containing all the prokka output files for the respective fasta
# you're going to want to make another directory with all the .fna files from prokka (should be output files from prokka of the Nucleotide FASTA file of the input contig sequences)
[mingers@scc2 Vp_water_FiltrationvsEnrich]$ find . -iname *.fna -exec sh -c 'cp $1 $2' sh {} "./prokka_fna_outputs/" \; 2>/dev/null

# next, acdc was used to assess and remove contamination from the genomes
# be sure to download acdc from the source and not through bioconda, because some of the functions are not up to date on bioconda

[mingers@scc2 Vp_water_FiltrationvsEnrich]$ module load miniconda
[mingers@scc2 Vp_water_FiltrationvsEnrich]$ module load cmake/3.22.2
[mingers@scc2 Vp_water_FiltrationvsEnrich]$ module load boost/1.69.0
[mingers@scc2 Vp_water_FiltrationvsEnrich]$ git clone https://github.com/mlux86/acdc.git
[mingers@scc2 Vp_water_FiltrationvsEnrich]$ cd acdc
[mingers@scc2 acdc]$ mkdir build && cd build
[mingers@scc2 build]$ conda create -n acdc_env
[mingers@scc2 build]$ conda activate acdc_env

# use kraken2 and build your own kraken2 database to detect number of species in your acdc outputs
    # installing kraken2 via source code
(acdc_env)[mingers@scc2 Vp_water_FiltrationvsEnrich]$ wget https://github.com/DerrickWood/kraken2/archive/refs/tags/v2.1.3.zip
(acdc_env)[mingers@scc2 Vp_water_FiltrationvsEnrich]$ unzip v2.1.3.zip
(acdc_env)[mingers@scc2 Vp_water_FiltrationvsEnrich]$ mkdir apps
(acdc_env)[mingers@scc2 Vp_water_FiltrationvsEnrich]$ mkdir apps/kraken2
(acdc_env)[mingers@scc2 Vp_water_FiltrationvsEnrich]$ realpath apps/kraken2
(acdc_env)[mingers@scc2 Vp_water_FiltrationvsEnrich]$ cd kraken2-2.1.3/
(acdc_env)[mingers@scc2 kraken2-2.1.3]$ ./install_kraken2.sh /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/apps/kraken2
(acdc_env)[mingers@scc2 kraken2-2.1.3]$ cd ..
(acdc_env)[mingers@scc2 Vp_water_FiltrationvsEnrich]$ export PATH=$PATH:/projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/apps/kraken2 #you have to do this each time you open a new terminal

    # made a kraken2 qsub (kraken_build_qsub) to build a database
(acdc_env)[mingers@scc2 Vp_water_FiltrationvsEnrich]$ nano kraken_build_qsub
#!/bin/bash -l
#$ -cwd # start job in submission directory
#$ -N kraken_build # job name, anything you want
#$ -l h_rt=24:00:00 #maximum run time
#$ -m be
#$ -pe omp 8

module load miniconda
conda activate acdc_env
unset OMP_NUM_THREADS
export PATH=$PATH:/projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/apps/kraken2
kraken2-build --standard --threads 16 --db kraken_db

    # submit your acdc qsub to identify contamination
    # I could only figure out how to do this by listing all the .fna files individually
(acdc_env)[mingers@scc2 Vp_water_FiltrationvsEnrich]$ nano acdc_qsub2
#!/bin/bash -l
#$ -cwd # start job in submission directory
#$ -N acdc2 # job name, anything you want
#$ -l h_rt=24:00:00 #maximum run time
#$ -m be
#$ -pe omp 8

module load miniconda
module load cmake/3.22.2
module load boost/1.69.0
conda activate acdc_env
cd acdc
cd build2
export PATH=$PATH:/projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/apps/kraken2


acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12291.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12372.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12455.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12933.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G13153.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G13979.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14172.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14293.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14505.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G10656.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12073.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12132.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12292.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12373.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12482.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12934.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G13187.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14012.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14173.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14342.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14559.fna
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G10690.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12087.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12133.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12293.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12396.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12483.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12935.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G13202.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14013.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14174.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14344.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14562.fna
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G10800.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12088.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12134.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12303.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12404.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12521.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12952.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G13833.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14014.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14175.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14345.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14563.fna
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G10803.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12089.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12135.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12309.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12405.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12705.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G13119.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G13835.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14084.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14177.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14382.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14564.fna
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G10806.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12091.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12137.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12334.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12408.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G12725.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G13120.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G13836.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14085.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14278.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14383.fna  
acdc -K /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/kraken_db -i /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/prokka_fna_outputs/G14604.fna

# acdc will output an interactive index.html file that you can open in your browser
# on the BU SCC, this file has to be opened through a Webserver interactive session
# in the index.html, each sample will be clustered in several ways and each sample will have contamination scores
# individual clusters can be exported in fasta format by clicking on the respective cluster color on the bottom right
# download the best clusters for each sample
    # for all clusters regardless of contaimation thresholds, I downloaded the largest cluster
    # for some samples, I also downloaded the other clusters if they represented a substantial portion of the points (this was especially true for samples that had contamination)
    # read more about contamination here: https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-016-1397-7


# now submit a qsub that uses kraken2 to classify all your genomes that you downloaded from the acdc output
(acdc_env)[mingers@scc2 Vp_water_FiltrationvsEnrich]$ nano kraken2_classify_all_qsub
#!/bin/bash -l
#$ -cwd # start job in submission directory
#$ -N kraken_classify # job name, anything you want
#$ -l h_rt=24:00:00 #maximum run time
#$ -m be
#$ -pe omp 8

module load miniconda
conda activate acdc_env
export PATH=$PATH:/projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/apps/kraken2

for F in /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/acdc_output1_083023/*.fasta; do
N=$(basename $F .fasta) ;
kraken2 --db kraken_db --threads 8 --report ${N}_report.txt --output ${N}_output.txt $F ;
done

### the following is how I sorted the outputs from kraken2 (I individually looked through all the files output from kraken2)
# if the percent Vibrio is greater than or equal to 95 and the fasta size is larger than 4 mb, keep
# if the percent Vibrio is between 90-95 or the fasta size is between 3-4 mb, consider discarding if the core genome still looks bad **
# if the percent Vibrio is below 90 or the fasta size is below 3 mb, discard *****

#15011: blue is 89.71% vibrio and 4.06 MB; green is 9.29% vibrio; purple is 94.97% vibrio and 6.22 MB --> I'm gonna go with PURPLE but maybe discard**
#10513: green is 100% vibrio but only 3.22 MB ; red is 99.61% vibrio and 5.2 mb --> use RED
#10635: blue is 99.53% vibrio and 2.45 mb; green is 98.55% vibrio and 1.83 mb; red is 98.92% vibrio and 4.26 mb --> probably go with RED
#10640: blue1 is only 0.85% vibrio, the rest is the algae thing; blue2 is only 72.14% vibrio; green is only 4.96% vibrio; red is 88.24% vibrio and 5.1 mb --> DISCARD*****
#10643: red is 100% vibrio and 3.9 mb --> could discard because below 4 mb**
#10654: green nope mostly staph only 0.25% vibrio; red also nope only 0.17% vibrio --> DISCARD*****
#10655: red is 99.12% vibrio and is 6.1 mb
#10656: red is 98.84% vibrio and is 4.3 mb
#10690: red is 100% vibrio and is 5.2 mb
#10800: red is 100% vibrio and is 5.1 mb
#10803: red is 100% vibrio and is 5.3 mb
#10806: red is 98.45% vibrio and is 5.4 mb
#10807: red is 100% vibrio and is 5 mb
#10809: red is 100% vibrio and is 5.4 mb
#11881: almost entirely Aeromonas and no vibrio 4.6 mb --> DISCARD*****
#11986: red is 100% vibrio and is 5.1 mb
#12006: green 100% vibrio and 3.7 mb; red 100% vibrio and 5.1 mb --> use RED
#12007: red is 100% vibrio and is 5 mb
#12008: blue is 99.8% vibrio but only 2 mb; green is 99.88% vibrio and 4.5 mb; red is 99.85% vibrio and 6.4 mb --> use RED
#12073: green nope entirely Aeromonas; red nope also Aeromonas --> DISCARD*****
#12087: red is 100% vibrio and is 5 mb
#12088: red is 97.87% vibrio and is 5.1 mb
#12089: blue is 93.59% vibrio and is 5 mb --> this could be discarded maybe**
#12091: red is 100% vibrio and is 4.9 mb
#12092: red is 98.25% and is 5.1 mb
#12093: blue is 100% vibrio and is 5.1 mb
#12094: red is 98.36% and is 5 mb
#12097: red is entirely random stuff and is 3.1 mb --> DISCARD*****
#12129: red is 100% vibrio and is 4.9 mb
#12130: red is 99.44% vibrio and is 5.1 mb
#12131: red is 98.72% and is 5 mb
#12132: red is 98.41% vibrio and is 5.1 mb
#12133: red is 100% vibrio and is 5 mb
#12134: green is 100% vibrio and 4.8 mb; red is 99.55% vibrio and 5.9 mb --> probably go with RED
#12135: red is 100% vibrio and is 5.1 mb
#12137: red is 100% vibrio and is 5.1 mb
#12138: red is 100% vibrio and is 4.7 mb
#12182: red is 100% vibrio and is 5 mb
#12183: red is 100% vibrio and is 5.1 mb
#12184: red is 100% vibrio and is 5.2 mb
#12185: red is 97.37% vibrio and is 5.1 mb 
#12187: red is 100% vibrio and is 5.1 mb
#12291: red is 100% vibrio and is 5 mb
#12292: red is 100% vibrio and is 4.9 mb
#12293: red is 100% vibrio and is 5 mb
#12303: red is mostly a photobacterium and barely any vibrio; and is 4.4 mb --> DISCARD*****
#12309: red is 96.49% vibrio and is 5.2 mb 
#12334: red is 100% vibrio and is 5.2 mb
#12335: green is 100% vibrio and 4.2 mb; red is 100% and is 5 mb --> use RED
#12339: red is mostly photobacterium and is 4.4 mb --> DISCARD*****
#12368: blue is 100% vibrio and 4.5 mb; green is 99.23% vibrio and only 1.4 mb; red is 99.51% vibrio and 5.8 mb --> let's go woth BLUE
#12369: red is 100% vibrio and is 5.2 mb
#12370: red is 100% vibrio and is 5.1 mb
#12371: red is 100% vibrio and is 5 mb
#12372: red is 100% vibrio and is 5.1 mb
#12373: red is 98.41% vibrio and is 5 mb
#12396: red is 94.37% vibrio and is 5 mb --> maybe discard**
#12404: red is 98.15% vibrio and is 5 mb
#12405: red is 98.11% vibrio and is 5 mb
#12408: red is 99.64% vibrio and is 5.1 mb
#12411: red is 98.81% vibrio and is 5 mb
#12412: blue is 95.01 and 669 kb very small; green is 100% vibrio and 4.4 mb; red is 98.45% vibrio and 5 mb --> go with GREEN
#12415: red is 98.58% vibrio and is 4.9 mb
#12420: red is 100% vibrio and is 5 mb
#12426: green is 97.06% vibrio and 4.5 mb; red is 97.79% vibrio and is 6 mb --> use RED
#12453: blue is 100% vibrio and 4.3 mb; green is 99.60% vibrio but only 1.5 mb; red is 99.65% vibio and 5.8 mb --> use RED
#12455: red is 97.01% vibrio and is 5.2 mb
#12482: red is mostly photobacterium and is 4.4 mb --> DISCARD*****
#12483: red is 100% vibrio and is 5.1 mb
#12521: red is 100% vibrio and is 5 mb
#12705: red is 100% vibrio and is 5.1 mb
#12725: blue is 100% vibrio and is 5.1 mb
#12774: red is 100% vibrio and is 5.1 mb
#12778: red is 100% vibrio and is 4.9 mb
#12785: red is 100% vibrio and is 5.1 mb
#12873: red is 91.30% vibrio and is 5.2 --> maybe discard**
#12874: blue is 97.24% vibrio but 1.8 mb; green is 100% vibrio and 6.8 mb; red is 99.32% vibrio and 8.6 mb --> use GREEN
#12899: red is 100% vibrio and is 5.2 mb
#12933: red is 100% vibrio and is 5 mb
#12934: red is 97.78% vibrio and is 5 mb
#12935: red is 90.57% vibrio and is 4.9 --> maybe discard**
#12952: red is 100% vibrio and is 5 mb
#13119: red is 88.89% vibrio and is 5.1 mb --> DISCARD*****
#13120: red is 94.44% and is 4.9 mb --> maybe discard**
#13122: red is 100% vibrio and is 5.3 mb
#13123: red is 100% and is 5 mb
#13124: blue is 100% and is 5.1 mb
#13130: green is 91.23% vibrio and 5.2 mb; red is 94.83% vibrio and 5.3 mb --> use RED but maybe discard**
#13132: blue is 96.19% vibrio but is only 571 kb; green is 99.71% vibrio and 1.7 mb (still small ish) --> too small DISCARD*****
#13133: red is 100% vibrio and is 5.2 mb
#13153: red is 100% vibrio and is 5.4 mb
#13187: red is 100% vibrio and is 5.3 mb
#13202: red is 98.41% vibrio and is 5.3 mb
#13833: red is 94.23% vibrio and is 5.1 mb --> maybe discard**
#13835: red is 100% vibrio and is 5.2 mb
#13836: red is 89.58% vibrio and is 5.1 mb --> DISCARD*****
#13870: red is 100% vibrio and is 4.9 mb
#13931: red 100% vibrio and is 5.4 mb
#13932: blue is 100% vibrio and is 5.1 mb
#13933: red is 100% vibrio and is 5.2 mb
#13942: red is 100% vibrio and is 4.9 mb
#13978: red is 98.25% vibrio and is 5.2 mb
#13979: red is 100% vibrio and is 5 mb
#14012: red is 100% vibrio and is 5.1 mb
#14013 red is 93.42% vibrio and is 5.1 mb --> maybe discard**
#14014: red is 96.97% vibrio and is 5 mb
#14084: blue is 100% vibrio and is 5 mb
#14085: red is 100% vibrio and is 5.1 mb
#14100: red is 95.24% vibrio and is 5 mb
#14101: red is 99.83% vibrio and is 5.7 mb
#14137: red is 100% vibrio and is 5.3 mb
#14138: red is 100% vibrio and is 5.1 mb
#14139: red is 93.51% vibrio and is 4.9 mb --> maybe discard**
#14140: red is 97.92% vibrio and is 5 mb
#14172: blue is 96.92% vibrio but only 465 kb; green is 100% vibrio but still only 956 kb --> DISCARD (too small)*****
#14173: blue is 98.07% vibrio but only 1.1 mb; green is 100% vibrio and 1.4 mb --> DISCARD (too small)*****
#14174: red is 98.23% vibrio and is 6 mb
#14175: red is 94.12% vibrio and is 5 mb --> maybe discard**
#14177: red is 99.42% vibrio and is 225 kb --> DISCARD
#14278: red is 100% vibrio and is 5.1 mb
#14279: green is 100% vibrio and 4.1 mb; red is 100% vibrio and 5.1 mb --> use RED
#14280: red is 100% vibrio and is 5.1 mb
#14288: green is 100% vibrio and 5 mb; red is 100% vibrio and 5.1 mb --> use RED
#14290: red is 96.30% vibrio and is 5.2 mb
#14291: blue is 99.56% vibrio but only 1.1 mb; green is 100% vibrio and 3.6 mb; red is 99.9% vibrio and 4.6 mb --> use RED
#14293: green is 100% vibrio and 3.7 mb; red is 100% vibrio and 5.1 mb --> use RED
#14342: red is 96.00% vibrio and is 5 mb
#14344: red is 100% vibrio and is 5.2 mb
#14345: red is 85.96% vibrio and is 5 mb --> DISCARD*****
#14382: red is 100% vibrio and is 5.1 mb
#14383: red is 95.45% vibrio and is 5.1 mb
#14492: red is 100% vibrio and is 5.1 mb
#14493: red is 68.75% vibrio and is 5.1 mb --> DISCARD*****
#14494: red is 93.75% vibrio and is 5 mb --> maybe discard**
#14495: red is 100% vibrio and is 5 mb
#14496: red is 97.37% vibrio and is 5.1 mb
#14503: red is 98.15% vibrio and is 36 kb --> too small DISCARD*****
#14505: red is 100% vibrio and is 5.1 mb
#14559: red is 98.45% vibrio and is 989 kb --> too small DISCARD*****
#14562: red is 100% and is 5.1 mb
#14563: red is 96.67% vibrio and is 4.9 mb
#14564: BLUE is 94.29% and 4.6 mb; GREEN1 is 100% vibrio but only 901 kb; GREEN2 is 80.30% vibrio and is 1.4 mb; RED is 84.51% vibrio and 5 mb --> use BLUE but maybe discard**
#14604: red is 100% vibrio and is 5.2 mb
#14606: red is 100% vibrio and is 5.2 mb
#14643: red is 100% vibrio and is 5.2 mb
#14690: red is 100% vibrio and is 5.1 mb
#14694: red is 97.37% vibrio and is 5.3 mb
#14698: red is 99.72% vibrio and is 6.4 mb
#14699: red is 98.65% vibrio and is 5.1 mb

# then move all the fasta files (the ones that you exported from acdc)
    # run prokka on these files
[mingers@scc2 acdc_output1_083023]$ nano prokka_multi 
#!/bin/bash -l
#$ -cwd # start job in submission directory
#$ -N prokka # job name, anything you want
#$ -l h_rt=24:00:00 #maximum run time
#$ -m be
#$ -pe omp 8
module load miniconda
conda activate prokka_env
conda install -c bioconda prokka
for F in *.fasta; do
N=$(basename $F .fasta) ;
prokka --locustag $N --outdir $N --prefix $N  $F ;
done

### make a directory with all your desired files in fasta format (run this code and then delete the ones you decided to discard from acdc - this should leave you with 132)
[mingers@scc2 acdc_output1_083023]$ find . -iname *.fna -exec sh -c 'cp $1 $2' sh {} "./prokka_fna_outputs_new/" \; 2>/dev/null

#then run roary on these 132 samples
[mingers@scc2 acdc_output1_083023]$ conda create -n roary_env
[mingers@scc2 acdc_output1_083023]$ nano roary_qsub
#!/bin/bash -l
#$ -cwd # start job in submission directory
#$ -N roary # job name, anything you want
#$ -l h_rt=24:00:00 #maximum run time
#$ -m be
#$ -pe omp 16

module load miniconda
conda activate roary_env
conda install -c conda-forge mamba
mamba install roary
module load blast
module load cdhit/4.6.8
cpan File::Find::Rule
roary -f ./roary_out_132samples -e -n -v -p 8 /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/acdc_output1_083023/prokka_gff_outputs_new/*.gff

#in the summary_statistics.txt file output by this batch job, roary yielded:
#Core genes	(99% <= strains <= 100%)	78
#Soft core genes	(95% <= strains < 99%)	668
#Shell genes	(15% <= strains < 95%)	4136
#Cloud genes	(0% <= strains < 15%)	41001
#Total genes	(0% <= strains <= 100%)	45883

#can analyze the alignment of the core genes using the harvest toolset: https://harvest.readthedocs.io/en/latest/index.html
[mingers@scc2 Vp_water_FiltrationvsEnrich]$ conda create -n parsnp_env
[mingers@scc2 Vp_water_FiltrationvsEnrich]$ conda activate parsnp_env
(parsnp_env)[mingers@scc2 Vp_water_FiltrationvsEnrich]$ conda install parsnp
#mess around with the parsnp paramenters
(parsnp_env)[mingers@scc2 Vp_water_FiltrationvsEnrich]$ parsnp -r ! -d ./acdc_output1_083023/prokka_fna_outputs_new/ -c
#the above gives an output in /projectnb/davieslab/mingers/Vp_UNH_diversity/Vp_water_FiltrationvsEnrich/P_2023_11_14_234447066591

#also try with enabling recombination detection/filter (-x) and increasing the threads used (-p 24)
(parsnp_env)[mingers@scc2 Vp_water_FiltrationvsEnrich]$ parsnp -r ! -d ./acdc_output1_083023/prokka_fna_outputs_new/ -p 24 -c -x
#the above gives an output in P_2023_11_15_101321439069

(parsnp_env)[mingers@scc2 Vp_water_FiltrationvsEnrich]$ parsnp -r ! -d ./acdc_output1_083023/prokka_fna_outputs_new/ -p 24 -C 1000 -c -x
#output in ./P_2023_11_15_111503603507

#then have to open the gingr output file in the gingr app on your desktop



